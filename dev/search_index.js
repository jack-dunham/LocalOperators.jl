var documenterSearchIndex = {"docs":
[{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"DocTestSetup = quote\n    using LocalOperators\nend","category":"page"},{"location":"#LocalOperators.jl","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"","category":"section"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"LocalOperators.jl is a simple package that exports a single struct type, LocalOperator representing an operator acting on a local Hilbert space. When adding, subtracting or multiplying two LocalOperator types together,the appropriate number of identity matrices are padded to each on the left and right such that they are compatible. ","category":"page"},{"location":"#Usage","page":"LocalOperators.jl","title":"Usage","text":"","category":"section"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"LocalOperators.jl exports only a single struct type:","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"LocalOperator","category":"page"},{"location":"#LocalOperators.LocalOperator","page":"LocalOperators.jl","title":"LocalOperators.LocalOperator","text":"LocalOperator{T<:Number} <: AbstractMatrix{T}\n\nFields\n\ndata::Matrix{T}: stores the matrix represention of the operator\nsupport::UnitRange{Int}: stores the sites that the operator has support on\nlocaldim::Int: stores the local dimension of the vector space\n\n\n\n\n\n","category":"type"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"A LocalOperator can be constructed like so:","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"julia> d = 2;                               # Local dimension \n\njulia> Z = Matrix{ComplexF64}([1 0; 0 -1]); # Pauli Z matrix\n\njulia> r = 0:0;                             # Support on site 0 only\n\njulia> a = LocalOperator(Z, r, d)\n2×2 1-local LocalOperator{ComplexF64} on sites 0 to 0:\n 1.0+0.0im   0.0+0.0im\n 0.0+0.0im  -1.0+0.0im","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"If the last argument to LocalOperator is ommited, then local dimension d=2 is assumed.","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"julia> b = LocalOperator(Z, 1:1)\n2×2 1-local LocalOperator{ComplexF64} on sites 1 to 1:\n 1.0+0.0im   0.0+0.0im\n 0.0+0.0im  -1.0+0.0im","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"We can now multiply a and b together to perform (a otimes 1) * (1 otimes b):","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"julia> a * b \n4×4 2-local LocalOperator{ComplexF64} on sites 0 to 1:\n 1.0+0.0im   0.0+0.0im   0.0+0.0im  0.0+0.0im\n 0.0+0.0im  -1.0+0.0im   0.0+0.0im  0.0+0.0im\n 0.0+0.0im   0.0+0.0im  -1.0+0.0im  0.0+0.0im\n 0.0+0.0im   0.0+0.0im   0.0+0.0im  1.0+0.0im","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"We can also do addition and subtraction","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"julia> a + b \n4×4 2-local LocalOperator{ComplexF64} on sites 0 to 1:\n 2.0+0.0im  0.0+0.0im  0.0+0.0im   0.0+0.0im\n 0.0+0.0im  0.0+0.0im  0.0+0.0im   0.0+0.0im\n 0.0+0.0im  0.0+0.0im  0.0+0.0im   0.0+0.0im\n 0.0+0.0im  0.0+0.0im  0.0+0.0im  -2.0+0.0im\n\njulia> b - a \n4×4 2-local LocalOperator{ComplexF64} on sites 0 to 1:\n 0.0+0.0im   0.0+0.0im  0.0+0.0im  0.0+0.0im\n 0.0+0.0im  -2.0+0.0im  0.0+0.0im  0.0+0.0im\n 0.0+0.0im   0.0+0.0im  2.0+0.0im  0.0+0.0im\n 0.0+0.0im   0.0+0.0im  0.0+0.0im  0.0+0.0im","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"If two LocalOperator types have support on the identical sites, then we fall back to the regular operations:","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"julia> a - a\n2×2 1-local LocalOperator{ComplexF64} on sites 0 to 0:\n 0.0+0.0im  0.0+0.0im\n 0.0+0.0im  0.0+0.0im","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"Operations between LocalOperator types with differing local dimension are not supported:","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"julia> a = LocalOperator([1 0; 0 -1], 0:0, 2);\n\njulia> b = LocalOperator([1 0 0; 0 0 0 ; 0 0 -1], 1:1, 3);\n\njulia> a * b\nERROR: LocalDimensionMismatch: local dimensions must match: a has local dim 2, b has local dim 3\n[...]","category":"page"},{"location":"","page":"LocalOperators.jl","title":"LocalOperators.jl","text":"DocTestSetup = nothing","category":"page"}]
}
